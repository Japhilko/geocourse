list.files(pattern = '^.*\\.tif$')
gewata <- brick('LE71700552001036SGS00_SR_Gewata_INT1U.tif')
gewata <- raster::brick('LE71700552001036SGS00_SR_Gewata_INT1U.tif')
plot(gewata)
gewata@data
gewata <- raster::brick('../data/
LE71700552001036SGS00_SR_Gewata_INT1U.tif')
getwd()
setwd("..")
setwd("slides/")
gewata <- raster::brick('../data/
LE71700552001036SGS00_SR_Gewata_INT1U.tif')
getwd()
setwd("../data/")
tmin <- getData("worldclim", var = "tmin", res = 10)
tmin <- raster::getData("worldclim", var = "tmin", res = 10)
tmin1 <- raster( "../data/wc10/tmin1.bil")
tmin1 <- raster::raster( "../data/wc10/tmin1.bil")
tmin1
tmin1
tmin1@data
plot(tmin1)
tmin1 <- tmin1/10
plot(tmin1)
getwd()
setwd("../rcode")
purl("../slides/B1_OpenStreetMap.Rmd",documentation = 2)
library(ggmap)
mapdist("Q1, 4 Mannheim","B2, 1 Mannheim")
?register_google
register_google("AIzaSyAfzshcMRteMzdUFdpby8_lcCe6NAaglmg")
mapdist("Q1, 4 Mannheim","B2, 1 Mannheim")
library(googleway)
map_key <- "AIzaSyAfzshcMRteMzdUFdpby8_lcCe6NAaglmg"
google_map(key = map_key, data = tram_stops) %>%
add_markers() %>%
add_traffic()
google_map(key = map_key, "London")
purl("../slides/B2_Geokodierung.Rmd",documentation = 2)
purl("../slides/B3_osm_mainapi.Rmd",documentation = 2)
purl("../slides/B4_Overpass.Rmd",documentation = 2)
setwd(rcode_path)
purl(".../slides/B5_osmdata.Rmd",documentation = 2)
setwd(rcode_path)
purl(".../slides/B5_osmdata.Rmd",documentation = 2)
getwd()
purl(".../slides/B5_osmdata.Rmd",documentation = 2)
purl(".../slides/B5_osmdata.Rmd",documentation = 2)
purl(".../slides/B",documentation = 2)
purl("../slides/B5_osmdata.Rmd",documentation = 2)
date()
3+3
4+
4
install.packages("readstata13")
library(readstata13)
?read.dta13
?mean
x <- c(0:10, 50)
xm <- mean(x)
c(xm, mean(x, trim = 0.10))
library(osmdata)
getwd()
setwd("D:/github/geocourse/data")
getwd()
dir()
data_path <- "D:/github/geocourse/data"
setwd(data_path)
zen_path <- "D:/GESIS/Vorträge/20171122_userStuttgart/data/"
zen_path
setwd(zen_path)
bev_dat <- readxl::read_excel("xlsx_Bevoelkerung.xlsx",3)
dim(bev_dat)
bev_dat2 <- bev_dat[1:1000,1:20]
dim(bev_dat2)
DT::datatable(bev_dat[1:1000,1:20])
setwd("D:/github/geocourse/data")
setwd("D:/github/geocourse/data")
library(xlsx)
install.packages("xlsx")
data_path <- "D:/GESIS/data"
setwd(data_path)
getw()
getwd()
dir()
dat <- xlsx::read.xlsx2("Datzen.xlsx")
dat <- xlsx::read.xlsx2("Datzen.xlsx",1)
library(readxl)
dat <- read_excel("Datzen.xlsx")
View(dat)
dat <- read.csv2("Datzen.csv")
dat
head(dat)
colnames(dat)
View(dat)
zen_path <- "D:/GESIS/Vorträge/20171122_userStuttgart/data/"
setwd(zen_path)
bev_dat <- readxl::read_excel("xlsx_Bevoelkerung.xlsx",3)
colnames(bev_dat)
colnames(bev_dat)[1]
head(bev_dat$`12-stelliger Amtlicher
Gemeindeschlüssel (AGS)`)
head(bev_dat[,1])
table(bev_dat[,1])
bla <- substr(bev_dat[,1],1,2)
table(bla)
bev_dat[,1]
as.character(bev_dat[,1])
bev_dat[,1]
bev_dat <- data.frame(bev_dat[,1])
bev_dat[,1]
bev_dat <- data.frame(bev_dat)
bev_dat[,1]
bla <- substr(bev_dat[,1],1,2)
table(bla)
bev_dat[1,1]
bev_dat[,1]
dim(bev_dat[,1])
length(bev_dat[,1])
dim(bev_dat)
SAL <- bev_dat[bla=="10",]
bev_dat$bla <- substr(bev_dat[,1],1,2)
SAL <- bev_dat[bla=="10",]
SAL <- bev_dat[bla=="10",]
dim(SAL)
head(bev_dat)
nchar(bla)
table(nchar(bla))
table(nchar(bev_dat[,1])
)
ab <- c("1234567","12345678","12345678")
nchar(ab)
ab[nchar(ab)==7] <- paste0("0",ab[nchar(ab)==7])
colnames(dat)[1:4]
?read.csv
colnames(dat)[1] <- "ags"
colnames(dat)[1]
paste("A","BA")
paste("A","BA")
paste0("A","BA")
paste("A","BA")
paste0("A","BA")
install.packages("tmap")
library(tmap)
data(Europe)
data(Europe)
# install.packages("tmap")
library(tmap)
data(Europe)
head(Europe)
# install.packages("tmap")
library(tmap)
head(Europe)
data(Europe)
qtm(Europe)
qtm(europe)
qtm(Europa)
data(Europa)
qtm(World)
qtm(Europe)
data(World)
qtm(World)
head(World)
colnames(World)
World$continent
head(World$continent)
Europe <- World[World$continent=="Europe",]
qtm(Europe)
head(World)
head(metro)
data(metro)
head(metro)
tm_shape("metro")  +
tm_raster(c("pop1970","pop1980"))
head(World)
tm_shape("World")  +
tm_raster(c("income_grp","gdp_cap_est"))
tm_shape("World")  +
tm_raster(c("income_grp","gdp_cap_est"))
url <- "https://raw.githubusercontent.com/Japhilko/
GeoData/master/2015/data/Unemployment07a13.csv"
Unemp <- read.csv(url)
head(Unemp)
head(Unemp$GEO)
head(World)
head(World$iso_a3)
iso_a2<- substr(World$iso_a3,1,2)
World$iso_a3
iso_a2<- substr(World$iso_a3,1,2)
iso_a2
ind <- match(iso_a2,Unemp$GEO)
ind
World$Val2007M12 <- Unemp$Val2007M12[ind]
dim(Unemp)
dim(Unemp$Val2007M12[ind])
length(Unemp$Val2007M12[ind])
dim(World)
head(Europe)
agrep("Oesterreich",World$name)
agrep("Österreich",World$name)
World$name
agrep("Austia",World$name)
agrep("Austia",World$name,value=T)
grep("Austia",World$name,value=T)
grep("Austria",World$name,value=T)
grep("Austria",World$name)
grep(c("Germany","Austria"),World$name)
grep("Austria",World$name)
country_names <- c("Germany","France","Austria")
country_names
erg <- vector()
for (i in 1:length(country_names)){
erg[i] <- grep(country_names[i],World$name)
}
erg
kreis <-c(rep("A",10),rep("B",5))
kreis
gem_daten <- data.frame(krs=sample(c("A","B"),n=100),
gem=1:100)
gem_daten <- data.frame(krs=sample(c("A","B"),n=100),
gem=1:100)
gem_daten <- data.frame(krs=sample(c("A","B"),100,replace=T),
gem=1:100)
head(gem_daten)
head(krs_daten)
krs_daten <- data.frame(krs=c("A","B"),wert=c(5,6))
head(krs_daten)
ind <- match(gem_daten$krs,krs_daten$krs)
ind
krs_daten
gem_daten
ind
gem_daten
gem_daten$wert_krs <- krs_daten$wert[ind]
gem_daten
agrep("Austia",World$name,value=T)
agrep("Austria",World$name,value=T)
agrep("Austria",World$name,value=T,max.distance = .4)
agrep("Austria",World$name,value=T,max.distance = .8)
erg <- list()
ergl <- list()
for (i in 1:length(country_names)){
ergl[[i]] <- agrep(country_names[i],World$name)
}
ergl[[i]]
ergl
url <- "https://raw.githubusercontent.com/Japhilko/
GeoData/master/2015/data/Unemployment07a13.csv"
Unemp <- read.csv(url)
head(Unemp)
Europe <- World[World$continent=="Europe",]
Europe
ind <- match(Europe$iso_a3,Unemp$GEO)
ind
Unemp$GEO
iso2 <- substr(Europe$iso_a3,1,2)
ind <- match(iso2,Unemp$GEO)
ind
head(UUnemp)
head(Unemp)
Europe$Val2007M12 <- Unemp$Val2007M12[ind]
qtm(Europe,"Val2007M12")
head(Unemp)
head(ind)
str(Europe$Val2007M12)
Europe$Val2007M12 <- as.numeric(Europe$Val2007M12)
dev.off()
dev.off()
dev.off()
View(Europe)
library("maptools")
data(wrld_simpl)
plot(wrld_simpl)
wrld_simpl
str(wrld_simpl)
head(wrld_simpl@data)
wrld_simpl@data$POP2005
gini <- read.csv("https://raw.githubusercontent.com/Japhilko/geocourse/master/data/gini-index_csv.csv")
head(gini)
gini05 <- gini[gini$Year=="2005",]
dim(gini05)
dim(gini)
dim(gini_b)
# mehrere Jahre
gini_b <- gini[gini$Year%in%c("2005","2004"),]
dim(gini_b)
rm(gini_b)
ab <- c(1,2,3,NA)
is.na(ab)
!is.na(ab)
ind <- match(gini12$Country.Code,wrld_simpl$ISO3)
############################
gini12 <- gini[gini$Year=="2012",]
ind <- match(gini12$Country.Code,wrld_simpl$ISO3)
ind
length(ind)
ind2 <- ind[!is.na(ind)]
length(ind2)
ginimap <- wrld_simpl[ind2,]
length(ginimap)
ginimap@data$gini12 <- gini12$Value
ginimap@data$gini12 <- gini12$Value[!is.na(ind)]
library(sp)
sp::spplot(ginimap,"gini12")
library(colorRamps)
?col.regions
spplot(ginimap,"gini12",
col.regions=cyan2yellow(2))
ginimap@data$farbe <- ginimap@data$gini12/max(ginimap@data$gini12)
ginimap@data$farbe
plot(ginimap,col=rgb(ginimap@data$farbe,0,0))
plot(ginimap,col=rgb(0,ginimap@data$farbe,0))
farben <- ginimap@data$farbe
spplot(ginimap,"gini12",
col.regions=farben)
library(RColorBrewer)
display.brewer.all()
my.palette <- rgb(seq(0,1,.1),0,0)
spplot(ginimap,"gini12",
col.regions=my.palette)
spplot(ginimap,"gini12",
col.regions=my.palette2)
my.palette2 <- brewer.pal(n = 7, name = "OrRd")
spplot(ginimap,"gini12",
col.regions=my.palette2)
my.palette2 <- brewer.pal(n = 10, name = "OrRd")
spplot(ginimap,"gini12",
col.regions=my.palette2)
my.palette <- rgb(seq(0,1,.1),0,0)
spplot(ginimap,"gini12",
col.regions=my.palette)
ind <- match(wrld_simpl$ISO3,Unemp$GEO)
ind <- match(Unemp$GEO,wrld_simpl$ISO3)
mymap <-  wrld_simpl[ind,]
ind <- [!is.na(ind)]
ind <- match(Unemp$GEO,wrld_simpl$ISO3)
ind <- ind[!is.na(ind)]
mymap <-  wrld_simpl[ind,]
mymap
mymap@data$Unemp <- Unemp$Val2007M12
Unemp$Val2007M12
length(mymap)
Unemp$GEO
ind <- match(Unemp$GEO,wrld_simpl$ISO2)
ind
ind <- ind[!is.na(ind)]
ind <- match(Unemp$GEO,wrld_simpl$ISO2)
ind2 <- ind[!is.na(ind)]
mymap <-  wrld_simpl[ind2,]
mymap@data$Unemp <- Unemp$Val2007M12[!is.na(ind)]
spplot(mymap,"Unemp")
mymap@data$Unemp <- Unemp$Val2007M10[!is.na(ind)]
spplot(mymap,"Unemp")
ind <- match(Unemp$GEO,wrld_simpl$ISO2)
ind2 <- ind[!is.na(ind)]
mymap <-  wrld_simpl[ind2,]
mymap@data$Unemp <- Unemp$Val2007M10[!is.na(ind)]
spplot(mymap,"Unemp")
mymap@data$Unemp
Unemp$Val2007M10[!is.na(ind)]
ind <- match(Unemp$GEO,wrld_simpl$ISO2)
ind
ind2
mymap <-  wrld_simpl[ind2,]
Unemp$Val2007M10[!is.na(ind)]
nemp$Val2007M12[!is.na(ind)]
Unemp$Val2007M12[!is.na(ind)]
mymap@data$Unemp <- Unemp$Val2007M12[!is.na(ind)]
spplot(mymap,"Unemp")
url <- "https://raw.githubusercontent.com/Japhilko/GeoData/master/2015/data/Unemployment.csv"
Unemp <- read.csv(url)
ind <- match(Unemp$GEO,wrld_simpl$ISO2)
ind2 <- ind[!is.na(ind)]
mymap <-  wrld_simpl[ind2,]
mymap@data$Unemp <- Unemp$Val2007M12[!is.na(ind)]
ind <- match(Unemp$GEO,wrld_simpl$ISO2)
ind2 <- ind[!is.na(ind)]
mymap <-  wrld_simpl[ind2,]
mymap@data$Unemp <- Unemp$X2014M10[!is.na(ind)]
spplot(mymap,"Unemp")
Unemp$X2014M10
ind2
ind <- match(Unemp$GEO,wrld_simpl$ISO2)
ind
ind <- match(Unemp$geo,wrld_simpl$ISO2)
ind2 <- ind[!is.na(ind)]
mymap <-  wrld_simpl[ind2,]
mymap@data$Unemp <- Unemp$X2014M10[!is.na(ind)]
spplot(mymap,"Unemp")
ind2
ind
Unemp$geo
ind <- match(Unemp$geo,wrld_simpl$NAME)
ind2 <- ind[!is.na(ind)]
ind2
mymap <-  wrld_simpl[ind2,]
mymap@data$Unemp <- Unemp$X2014M10[!is.na(ind)]
spplot(mymap,"Unemp")
Unemp$geo
wrld_simpl$NAME
ind <- match(Unemp$geo,wrld_simpl$NAME)
ind
ind2 <- ind[!is.na(ind)]
mymap <-  wrld_simpl[ind2,]
mymap$NAME
Unemp$geo
Unemp$geo[1]
Unemp$geo[2]
Unemp$geo[3]
Unemp$geo[4]
Unemp$geo[5]
Unemp$geo[6]
mymap[1]
mymap$NAME[1]
mymap@data$Unemp <- Unemp$X2014M10[!is.na(ind)]
mymap@data$Unemp <- Unemp$X2014M10[!is.na(ind)]
spplot(mymap,"Unemp")
seq(0,1,.1)
my.palette <- rgb(seq(0,1,.1),0,0)
spplot(ginimap,"gini12",
col.regions=my.palette)
my.palette <- rgb(seq(0,1,.05),0,0)
spplot(ginimap,"gini12",
col.regions=my.palette)
display.brewer.all()
wrld_simpl$REGION
table(wrld_simpl$REGION)
plot(wrld_simpl[wrld_simpl$REGION==0,])
plot(wrld_simpl[wrld_simpl$REGION==2,])
mymap <- unionSpatialPolygons(wrld_simpl,
wrld_simpl$)
mymap <- unionSpatialPolygons(wrld_simpl,
wrld_simpl$)
mymap <- unionSpatialPolygons(wrld_simpl,
wrld_simpl$REGION)
plot(mymap,col="royalblue")
length(mymap)
table(wrld_simpl$REGION)
plot(mymap[1,])
plot(mymap[2,])
options(scipen=999)
100000000000000
options(scipen=9)
100000000000000
options(scipen=999)
link<-"https://raw.githubusercontent.com/GeoScripting-WUR/IntroToRaster/gh-pages/data/gewata.zip"
library(tmap)
# Chunk 1: steup_osmdata
knitr::opts_chunk$set(echo = T,cache=T,eval=T,message=F,warning=F,fig.height=4)
Ex <- T
# Chunk 3
library(osmdata)
# Chunk 5
library("osmplotr")
library("osmdata")
# Chunk 8
load("../data/overpass_building_kindergarten_Mannheim.RData")
# Chunk 10
bb <- getbb('Ladenburg')
# Chunk 11
q <- opq(bbox = bb)
# Chunk 12
bb_poly <- getbb(place_name = "Ladenburg",
format_out = "polygon")
# Chunk 13
bb_poly[1:4,]
# Chunk 14
library(sf)
# Chunk 15
library(sf)
ls <- st_linestring(bb_poly)
sfc <- st_sfc(ls)
# Chunk 17
sfc2 <- st_cast(sfc, "MULTILINESTRING")
ab <- st_geometrycollection(sfc)
# Chunk 18
library(tmap)
qtm(sfc)
# Chunk 22: shop_bakery
library(magrittr)
dat1 <- opq(bbox = 'Ladenburg') %>%
add_osm_feature(key = 'shop', value = 'bakery') %>%
osmdata_sf ()
# Chunk 23
unlist(lapply(dat1,nrow))
tm_shape(sfc)
library(knitr)
library(rmarkdown)
library(lme4)
main_path <- "D:/github/geocourse/" # zu Hause
slide_path <- paste0(main_path,"slides/")
rcode_path <- paste0(main_path,"rcode/")
#-------------------------------------------------#
# Parts of the presentation
#-------------------------------------------------#
setwd(slide_path)
dirnamen <- dir()
presparts <- dirnamen[grep(".Rmd",dirnamen)]
# setwd("D:/gitlab/IntroDataAnalysis/rcode/")
setwd(rcode_path)
for (i in 1:length(presparts)){
purl(paste0("../slides/",presparts[i]),documentation = 2)
}
i
length(presparts)
i<-20
purl(paste0("../slides/",presparts[i]),documentation = 2)
setwd("slides")
st_layers("../data/mannheim_busstop.geojson")
library(sf)
st_layers("../data/mannheim_busstop.geojson")
ma_busstop <- st_read("../data/mannheim_busstop.geojson")
