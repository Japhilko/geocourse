# Chunk 15
Af_nb[1]
# Chunk 16
plot(Africa)
plot(Africa[1,],col="red",add=T)
plot(Africa[Af_nb[1][[1]],],col="orange",add=T)
IDs <- row.names(as(Africa, "data.frame"))
Af10_nb <- knn2nb(knearneigh(Af, k = 10), row.names = IDs)
Af10_nb
library(sf)
lnd <- read_sf("../data/london_sport.shp")
getwd()
setwd("D:/github/geocourse/slides")
library(sf)
lnd <- read_sf("../data/london_sport.shp")
VG250 <- readOGR ("../data/london_sport.shp","../data/london_sport")
?readOGR
getwd()
setwd("D:/github/geocourse/data/")
VG250 <- readOGR ("london_sport.shp","london_sport")
london_sport <- readOGR ("london_sport.shp","london_sport")
head(london_sport@data)
london_sport@data
install.packages("plotKML")
# Chunk 1: setup_simplefeatures
knitr::opts_chunk$set(echo = TRUE,fig.height=4,cach=T)
athome <- T
# Chunk 2
library(sf)
# Chunk 4: bbpoly_amsterdam
library(osmdata)
bb_poly <- getbb(place_name = "Amsterdam",
format_out = "polygon")
# Chunk 5
ls <- st_multilinestring(bb_poly)
# Chunk 6
pol <- sf::st_polygon(bb_poly)
class(pol)
# Chunk 8: bb_poly_ma
bb_poly_ma<-getbb(place_name="Mannheim",format_out="polygon")
# Chunk 9
plot(bb_poly_ma)
# Chunk 12
# x <- osmdata_sf(pol)
# Chunk 13
demo(nc, ask = FALSE, echo = FALSE)
# Chunk 14
plot(nc)
# Chunk 15
data_path <- "D:/GESIS/data/"
# Chunk 17
lon <- st_read("../data/london_sport.shp")
# Chunk 18
plot(lon$geometry)
# Chunk 19
st_layers("../data/ams_centraal.osm")
# Chunk 20
datm <- st_read("../data/ams_centraal.osm","multipolygons")
# Chunk 22
geom_datm <- st_geometry(datm)
plot(geom_datm)
# Chunk 23
library(dplyr)
buis <- datm %>% select(building)
plot(buis)
# Chunk 25
datbuis <- datm[, "building", drop = TRUE]
plot(datbuis)
# Chunk 26
houses <- datm[datm$building %in% c("house","yes",
"apartments"),]
# Chunk 28
class(houses)
class(st_geometry(houses))
# Chunk 29
library(tmap)
(map1 <- qtm(st_geometry(houses)))
datl <- st_read("../data/ams_centraal.osm","lines")
roads <- datl[datl$highway %in% c("residential"),]
(map2 <- map1+qtm(st_geometry(roads),lines.col="purple"))
roads2 <- datl[datl$highway %in% c("tertiary","secondary",
"primary"),]
(map3 <- map2+qtm(st_geometry(roads2),lines.col="red"))
nc
?nc
getwd()
setwd("..")
setwd("slides/")
st_layers("../data/london_sport.shp")
london <- st_read("../data/london_sport.shp")
plot(london)
sf::plot(london)
spplot(london)
sp::spplot(london)
?plot
head(london)
plot(london,col=Pop_2001)
plot(london,col=london$Pop_2001)
plot(london,col=1:4)
plot(london,col=1:20)
plot(london,"Pop_2001")
plot(london$Pop_2001)
colnames(london)
london2 <- london[,-(1:3)]
plot(london2)
library("colorramps")
library("colorRamps")
?colorRamps::blue2yellow
plot(london,col=blue2yellow(400))
plot(london,col=blue2yellow(40))
plot(london,col=blue2yellow(30))
plot(london,col=blue2yellow(20))
plot(london,col=blue2yellow(10))
ls <- st_multilinestring(bb_poly_ma)
bb_poly_ma<-getbb(place_name="Mannheim",format_out="polygon")
plot(bb_poly_ma)
bb_poly_ma
ab <- st_polygonize(bb_poly_ma)
plot(bb_poly_ma,type="l")
dev.off()
dev.off()
mapview(leaflet::gadmCHE)
library(mapview)
mapview(leaflet::gadmCHE)
(load("../data/spatsamp_68239.RData"))
mapview(spatsamp)
library(geojsonR)
multi_polygon_dat = list(list(list(c(102, 2.0), c(103, 2.0), c(103, 3.0), c(102, 2.0))),
list(list(c(100, 0.0), c(101, 1.0), c(101, 1.0), c(100, 0.0)),
list(c(100.2, 0.2), c(100.2, 0.8), c(100.8, 0.8), c(100.2, 0.2))))
multi_polygon = init$MultiPolygon(multi_polygon_dat, stringify = TRUE)
multi_polygon
# initialize class
init = TO_GeoJson$new()
# Examples covering all geometry-objects
# Point
point_dat = c(100, 1.01)
point = init$Point(point_dat, stringify = TRUE)
point
# Polygon (WITHOUT interior rings)
polygon_WITHOUT_dat = list(list(c(100, 1.01), c(200, 2.01), c(100, 1.0), c(100, 1.01)))
polygon_without = init$Polygon(polygon_WITHOUT_dat, stringify = TRUE)
polygon_without
# Polygon (WITHOUT interior rings)
polygon_WITHOUT_dat = list(list(c(100, 1.01), c(200, 2.01), c(100, 1.0), c(100, 1.01)))
polygon_without = init$Polygon(polygon_WITHOUT_dat, stringify = TRUE)
polygon_without
mapview(polygon_without)
mapview(polygon_WITHOUT_dat)
busstops <- "../data/Amsterdam_bus_stop.geojson"
mapview(bus_stops)
busstops <- "../data/Amsterdam_bus_stop.geojson"
bus_stops <- geojsonio::geojson_read(busstops,
what = "sp")
mapview(bus_stops)
gcs <- geojsonio::geojson_read("../data/ddat.geojson")
view(gcs)
mapview(gcs)
gcs
plot(gcs)
gcs <- geojsonio::geojson_read("../data/ddat.geojson",what="sp")
plot(gcs)
mapview(gcs)
library("RJSONIO")
con <- url("http://nominatim.openstreetmap.org/search?format=json&
addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1")
geoc <- fromJSON(paste(readLines(con,warn=F),
collapse = ''))
close(con)
mapview(geoc)
geoc
geoc$adress
geoc$address
geoc[[10]]$address
DT::datatable(dat$features$properties)
library(jsonlite)
dat<-jsonlite::fromJSON("../data/amsterdam_busstop.geojson")
DT::datatable(dat$features$properties)
st_layers("../data/london_sport.shp")
london <- st_read("../data/london_sport.shp")
DT::datatable(london@data)
london
DT::datatable(london)
spatsamp
library(spdep)
Af_nb <- tri2nb(Af)
Af_nb[1]
Af@data
# Chunk 1: setup_spdep
knitr::opts_chunk$set(echo = TRUE,cache=T,eval=T,warning=F,fig.height=6)
GESIS <- F
athome <- !GESIS
# Chunk 2
vg250path <- "J:/Work/GESISPanel_DATA/01_post_processing/c01/e_2017/ee/01_wave/data/com/geodata/vg250/"
# Chunk 3
vg250path <- "D:/GESIS/data/vg250_3112.utm32s.shape.ebenen/vg250_ebenen"
# Chunk 4
library(rgdal)
# Chunk 5
setwd(vg250path)
VG250 <- readOGR ("VG250_GEM.shp","VG250_GEM")
# Chunk 6
spatsamp <- spsample(VG250, 100,type="random")
# Chunk 7
tmp <- sp::over(spatsamp, VG250)
# Chunk 8
head(tmp[,1:6])
# Chunk 10
newData<-sp::spTransform(spatsamp, CRS("+init=epsg:3857"))
# Chunk 11
head(spatsamp)
head(newData)
# Chunk 12
library(maptools)
data(wrld_simpl)
Africa <- wrld_simpl[wrld_simpl@data$REGION==2,]
plot(Africa)
# Chunk 13
Af <- coordinates(Africa)
head(Af)
# Chunk 14
plot(Africa)
points(x=Af[1,1],y=Af[1,2],col="red",pch=20)
# Chunk 15
library(spdep)
Af_nb <- tri2nb(Af)
Af@data
Af
head(Af)
Africa@data
head(Africa@data)
Africa@data[Af_nb[1],]
Africa@data
Af_nb[1]
Africa@data[Af_nb[[1]][1],]
Africa@data[Af_nb[[1]],]
# Chunk 1: setup_shapefiles
knitr::opts_chunk$set(echo = T,cache=T,fig.height=4,message=F,warning=F)
library(knitr)
GESIS <- F
athome <- !GESIS
ONB_ex <- T
spatsampI <-F
show_solution <- F
# Chunk 2
geodata_path <- "D:/Daten/Daten/GeoDaten/"
# Chunk 3
geodata_path <- "D:/GESIS/owncloud/presentations/20151003_Georef_SurveyT/data/"
# Chunk 4
setwd(geodata_path)
library(maptools)
onb <- readShapePoly("onb_grenzen.shp")
# Chunk 7
kable(head(onb@data))
# Chunk 8
vwb <- onb@data$VORWAHL
vwb2 <- substr(vwb, 1,2)
# Chunk 9
library(lattice)
barchart(table(vwb2),col="royalblue",
xlab="Häufigkeit")
# Chunk 10
vwb6 <- onb[vwb2=="06",]
plot(vwb6)
# Chunk 11
vwb6c <- unionSpatialPolygons(vwb6,
rep(1,length(vwb6)))
plot(vwb6c,col="royalblue")
# Chunk 12
Com <- vwb6@data$NAME
plot(vwb6)
plot(vwb6[Com=="Mannheim",],col="red",add=T)
plot(vwb6[Com=="Heidelberg",],col="green",add=T)
plot(vwb6[Com=="Kaiserslautern",],col="blue",add=T)
# Chunk 13
data_path <- "D:/GESIS/data/"
# Chunk 14
data_path <- "D:/Daten/Daten/GeoDaten/"
# Chunk 15
library(rgdal)
# Chunk 16
setwd(data_path)
plz <- readOGR ("post_pl.shp","post_pl")
# Chunk 17
plzbereich <- substr(plz@data$PLZ99,1,2)
plot(plz[plzbereich=="68",])
eurostatpath <- "D:/Eigene Dateien/Dokumente/GitHub/ps_2017_11_user_stuttgart/data/"
HHsr <- read.xlsx2(paste0(eurostatpath,"HHsavingRate.xls",1))
library(xlsx)
HHsr <- read.xlsx2(paste0(eurostatpath,"HHsavingRate.xls",1))
HHsr <- read.xlsx2(paste0(eurostatpath,"HHsavingRate.xls"),1)
kable(HHsr[1:4,1:5])
install.packages("colourpicker")
library(ggplot2);library(choroplethrMaps)
library(WDI)
load("../data/info_bar_Berlin.RData")
getwd()
setwd("D:/github/geocourse/slides")
load("../data/info_bar_Berlin.RData")
info_be <- info[,c("addr.postcode","addr.street","name","lat","lon")]
tab_plz <- table(info_be$addr.postcode)
ind <- match(BE@data$PLZ99_N,names(tab_plz))
PLZ@data
setwd(data_path)
data_path <- "D:/GESIS/data/"
plz <- readOGR ("post_pl.shp","post_pl")
setwd(data_path)
plz <- readOGR ("post_pl.shp","post_pl")
BE <- plz[plz@data$PLZORT99%in%c("Berlin-West",
"Berlin (östl. Stadtbezirke)"),]
getwd()
setwd("D:/github/geocourse/slides")
save(BE,file="../data/BE.RData")
ind <- match(BE@data$PLZ99_N,names(tab_plz))
ind
BE@data$num_plz <- tab_plz[ind]
BE@data$num_plz[is.na(BE@data$num_plz)] <- 0
tmap::qtm(BE,fill = "num_plz")
load("../data/osmsa_PLZ_14.RData")
dat_plz <- PLZ@data
kable(head(dat_plz))
dat_plz <- PLZ@data
DT::datatable(dat_plz)
data_path <- "D:/Daten/Daten/GeoDaten/"
setwd(data_path)
data_path <- "D:/GESIS/data/"
setwd(data_path)
PLZ_SG <- plz[plz@data$PLZORT99=="Stuttgart",]
qtm(PLZ_SG,fill="bakery")
tmap::qtm(PLZ_SG,fill="bakery")
PLZ_SG <- PLZ[PLZ@data$PLZORT99=="Stuttgart",]
ls()
load("../data/osmsa_PLZ_14.RData")
setwd("D:/github/geocourse/slides")
load("../data/osmsa_PLZ_14.RData")
(load("../data/osmsa_PLZ_14.RData"))
PLZ@data
tmap::qtm(PLZ_SG,fill="bakery")
tab_landcover <- table(PLZ_SG$land_cover.value)
df_landcover <- data.frame(tab_landcover)
colnames(df_landcover)[1] <- c("Type_landcover")
kable(df_landcover)
qtm(PLZ_SG,fill="land_cover.value")
library("RJSONIO")
con <- url("http://nominatim.openstreetmap.org/search?format=json&
addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1")
geoc <- fromJSON(paste(readLines(con,warn=F),
collapse = ''))
close(con)
names(geoc[[1]])
getwd()
setwd("slides")
save(geoc,file="../data/Amsterdam_Rozengracht.RData")
load("../data/Amsterdam_Rozengracht.RData")
geoc[[1]]
geoc[[1]]$address
geoc2 <- jsonlite::fromJSON(paste(readLines(con,warn=F),
collapse = ''))
geoc2 <- jsonlite::fromJSON(paste(readLines(con,warn=F),
collapse = ''))
?jsonlite::fromJSON
geoc2 <- jsonlite::fromJSON("http://nominatim.openstreetmap.org/search?format=json&
addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1")
geoc2 <- jsonlite::fromJSON(con)
con <- url("http://nominatim.openstreetmap.org/search?format=json&
addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1")
geoc2 <- jsonlite::fromJSON(con)
close(con)
geoc2
with(geoc2,data.frame(osm_id,lat))
geoc2df <- with(geoc2,data.frame(osm_id,lat))
geoc2df
geoc2df <- with(geoc2,data.frame(osm_id,lat,lon))
geoc2df
geoc2
DT::datatable(geoc2df)
?DT::datatable
DT::datatable(geoc2)
geoc2
geoc3 <- data.frame(geoc2)
DT::datatable(geoc2)
geoc3
DT::datatable(geoc3)
geoc2df <- with(geoc2,data.frame(osm_id,lat,lon,address.house_number))
DT::datatable(geoc2df)
kable(geoc2df)
library(knitr)
kable(geoc2df)
geoc2df <- with(geoc2,data.frame(osm_id,lat,lon,address.house_number))
geoc2 <- jsonlite::fromJSON(con)
geoc2df <- with(geoc2,data.frame(osm_id,lat,lon,address.house_number))
geoc2
con <- url("http://nominatim.openstreetmap.org/search?format=json&
addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1")
geoc2 <- jsonlite::fromJSON(con)
geoc2
geoc2$address
geoc2$address$house_number
geoc2df$house_number <-  geoc2$address$house_number
kable(geoc2df)
save(geoc2df,file="Amsterdam_Rozengracht_geoc2df.RData")
save(geoc2df,file="../data/Amsterdam_Rozengracht_geoc2df.RData")
load("../data/Amsterdam_Rozengracht_geoc2df.RData")
load("../data/MAwiki.RData")
library(knitr)
kable(MAwiki)
DT::datatable(MAwiki)
DT::datatable(MAwiki[-which(colnames(MAwiki)%in%c("Summary"))])
DT::datatable(MAwiki[-which(colnames(MAwiki)%in%c("Summary")),])
which(colnames(MAwiki)%in%c("Summary"))
colnames(MAwiki)
DT::datatable(MAwiki[-which(colnames(MAwiki)%in%c("summary")),])
DT::datatable(MAwiki[,-which(colnames(MAwiki)%in%c("summary"))])
install.packages("ggmap")
library(ggmap)
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim")
library(ggmap)
MA_map <- qmap("Mannheim")
geocode("Mannheim")
geocode("Mannheim, B2,1")
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim")
?geocode
devtools::install_github("dkahle/ggmap", ref = "tidyup")
install.packages("digest")
install.packages("digest")
ininstall.packages("scales")
install.packages("scales")
install.packages("dplyr")
devtools::install_github("dkahle/ggmap", ref = "tidyup")
MA_map <- qmap("Mannheim")
library(ggmap)
MA_map <- qmap("Mannheim")
geocode("Mannheim, B2,1")
?register_google
register_google(key = "Jxr-29R4kdAeZ_yAzLFaAd6kuJQ=")
geocode("Mannheim, B2,1")
geocode("Mannheim, B2,1")
register_google(key = "our-rampart-219920 ")
geocode("Mannheim, B2,1")
register_google(key = "
AIzaSyCZ1W32SKVnjBjTy3ayS9Oxtzgpll-6E08")
geocode("Mannheim, B2,1")
register_google(key = "AIzaSyCZ1W32SKVnjBjTy3ayS9Oxtzgpll-6E08")
geocode("Mannheim, B2,1")
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim, B2,1")
geocode("Mannheim, B2,1")
geocode("Mannheim, B2,5")
geocode("Heidelberg")
register_google(key = "AIzaSyCZ1W32SKVnjBjTy3ayS9Oxtzgpll-6E08")
geocode("Heidelberg")
register_google(key = "AIzaSyBCk4y1fkqoAOb_VNhom9WO4-IWgLTzyds")
geocode("Heidelberg")
geocode("Mannheim")
register_google(key = "AIzaSyAfzshcMRteMzdUFdpby8_lcCe6NAaglmg")
MA_map <- qmap("Mannheim, B2,1")
geocode("Mannheim")
geocode("Heidelberg")
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim")
register_google(key = "AIzaSyAfzshcMRteMzdUFdpby8_lcCe6NAaglmg")
MA_map <- qmap("Mannheim")
xtable(geoc2df)
library(xtable)
xtable(geoc2df,row.names=F)
paste0(coursepath,"slides/A2_ggmap.R")
coursepath <-"https://github.com/Japhilko/geocourse/blob/master/"
paste0(coursepath,"slides/A2_ggmap.R")
library(rnaturalearth)
usa = ne_countries(country = "United States of America") # United States borders
usa
plot(usa)
library(raster)
x <- raster()
x
plot(r, main='Raster with 100 cells')
library(sf)
usa_sf <- st_as_sf(usa)
plot(usa_sf)
library("RJSONIO")
api_adress <- "http://nominatim.openstreetmap.org/search?format="
file_format <- "json"
search_query <- "addressdetails=1&extratags=1&q="
adress <- "Amsterdam+Niederlande+Rozengracht+1"
link <- paste0(api_adress,file_format,search_query,adress)
con <- url(link)
geoc <- fromJSON(paste(readLines(con,warn=F),
collapse = ''))
close(con)
link <- "http://nominatim.openstreetmap.org/search?format=json&
link <- "http://nominatim.openstreetmap.org/search?format=json&addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1"
link <- "http://nominatim.openstreetmap.org/search?format=json&addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1"
con <- url(link)
geoc <- fromJSON(paste(readLines(con,warn=F),
collapse = ''))
close(con)
link <- paste0(api_adress,file_format,search_query,adress)
link
"http://nominatim.openstreetmap.org/search?format=json&addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1"
search_query <- "&addressdetails=1&extratags=1&q="
adress <- "Amsterdam+Niederlande+Rozengracht+1"
link <- paste0(api_adress,file_format,search_query,adress)
con <- url(link)
geoc <- fromJSON(paste(readLines(con,warn=F),
collapse = ''))
close(con)
