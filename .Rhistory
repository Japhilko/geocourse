library(leaflet)
date()
library("tmaptools")
gc_tma <- tmaptools::geocode_OSM("Via dei Roccettini 9,
I-50014 San Domenico di Fiesole")
## Geocoding
gc_tma <- tmaptools::geocode_OSM("Via dei Roccettini 9, San Domenico di Fiesole")
gc_tma
## Geocoding
gc_tma <- tmaptools::geocode_OSM("Via dei Roccettini 9, Firenze")
## Geocoding
gc_tma <- tmaptools::geocode_OSM("Firenze")
m <- leaflet() %>%
addTiles() %>%
addMarkers(lng=gc_tma$coords["x"], lat=gc_tma$coords["y"], popup=place_i)
m
m <- leaflet() %>%
addTiles() %>%
addMarkers(lng=gc_tma$coords["x"], lat=gc_tma$coords["y"], popup="Firenze")
m
grap_path <- "D:/github/geocourse/slides/figure/"
setwd(grap_path)
setwd(grap_path)
pdf("firstpic_firenze.pdf")
qmap("Firenze",zoom=18, maptype = "satellite")
dev.off()
library(ggmap)
setwd(grap_path)
pdf("firstpic_firenze.pdf")
qmap("Firenze",zoom=18, maptype = "satellite")
dev.off()
qmap("Firenze",zoom=16, maptype = "satellite")
library(maptools)
data(wrld_simpl)
kable(head(wrld_simpl@data[,c("ISO2","NAME","AREA","POP2005")]))
library(knitr)
kable(head(wrld_simpl@data[,c("ISO2","NAME","AREA","POP2005")]))
library(ggmap)
?qmap
qmap(location = "baylor university", zoom = 14, source = "osm", scale = 20000)
qmap(location = "Trier", zoom = 14, source = "osm")
?get_openstreetmap
OSM_scale_lookup(zoom = 10)
qmap(location = "Trier", zoom = 10, source = "osm",scale=575000)
qmap(location = "Trier", zoom = 10)
usa_center = as.numeric(geocode("United States"))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal")
USAMap
getwd()
setwd("slides/")
pdf("figure/USAMap.pdf")
USAMap
dev.off()
qmap(location = "Trier", zoom = 10,scale=5)
qmap(location = "Trier", zoom = 10,scale=4)
qmap(location = "Trier", zoom = 14,scale=4)
triermap <- qmap(location = "Trier", zoom = 14,scale=2)
triermap
setwd("D:/GESIS/data/vg250_3112.utm32s.shape.ebenen/vg250_ebenen")
library(rgdal)
VG250 <- readOGR ("VG250_F.shp","VG250_F")
VG250 <- readOGR ("VG250_GEM.shp","VG250_GEM")
head(VG250@data)
bla <- substr(VG250@data$AGS_0,1,2)
plot(VG250[bla=="11",])
spatsamp <- spsample(VG250[bla=="11",], 100)
spatsamp <- spsample(VG250[bla=="11",], 100,type="random")
spatsamp
# EPSG: 3857
newData<-spTransform(spatsamp, CRS("+init=epsg:3857"))
newData
setwd("D:/GESIS/data/")
plz <- readOGR ("post_pl.shp","post_pl")
spatsamp <- spsample(plz[plz@data$PLZ99=="68239",], 100,type="random")
spatsamp
library(ggmap)
ggmap::revgeocode(spatsamp[1,])
?ggmap::revgeocode
ggmap::revgeocode(as.numeric(spatsamp[1,]))
as.numeric(spatsamp[1,])
spatsamp[1,]
ggmap::revgeocode(as.numeric(spatsamp[1,c("x","y")]))
spatsamp[1,c("x","y")]
ggmap::revgeocode(as.vector(spatsamp[1,]))
spatsamp[1,]$x
ggmap::revgeocode(c(spatsamp[1,]$x,spatsamp[1,]$y))
set.seed(323)
spatsamp <- spsample(plz[plz@data$PLZ99=="68239",], 100,type="random")
spatlist <- list()
spatlist[[i]] <- ggmap::revgeocode(c(spatsamp[i,]$x,spatsamp[i,]$y))
library(ggmap)
spatlist <- list()
for (i in 1:nrow(spatsamp)){
spatlist[[i]] <- ggmap::revgeocode(c(spatsamp[i,]$x,spatsamp[i,]$y))
}
i
nrow(spatsamp)
set.seed(323)
n <- 100
spatsamp <- spsample(plz[plz@data$PLZ99=="68239",], n,type="random")
spatlist <- list()
for (i in 1:n){
spatlist[[i]] <- ggmap::revgeocode(c(spatsamp[i,]$x,spatsamp[i,]$y))
}
spatlist
setwd("D:/github/geocourse/slides")
spatvec <- unlist(spatlist)
spatvec
spatsamp$adress <- spatvec
spatsamp
save(spatsamp,file="../data/spatsamp_68239.RData")
install.packages("geojsonR")
citation("geojsonR")
install.packages("lawn")
library(lawn)
setwd("slides")
nycounties <- geojsonio::geojson_read("../data/Amsterdam_bus_stop.geojson",
what = "sp")
bus_stops <- geojsonio::geojson_read("../data/Amsterdam_bus_stop.geojson",
what = "sp")
plot(bus_stops)
sp::plot(bus_stops)
gcs <- geojsonio::geojson_read("http://nominatim.openstreetmap.org/search?format=json&addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1",what="sp")
firstpart <- "http://overpass-api.de/api/interpreter?data="
paste0(firstpart,"node["name"="Gielgen"](50.7,7.1,50.8,7.2);out;")
paste0(firstpart,"node['name'='Gielgen'](50.7,7.1,50.8,7.2);out;'")
gcs <- geojsonio::geojson_read(paste0(firstpart,"node['name'='Gielgen'](50.7,7.1,50.8,7.2);out;",
what="sp")
gcs <- geojsonio::geojson_read(firstpart,"node['name'='Gielgen'](50.7,7.1,50.8,7.2);out;",
what="sp")
gr_polygon(n = 1, vertices = 5, max_radial_length = 5)
a <- gr_polygon(n = 1, vertices = 5, max_radial_length = 5)
plot(a)
view(a)
gcs <- geojsonio::geojson_read(paste0(firstpart,"node['name'='Gielgen'](50.7,7.1,50.8,7.2);out;",
what="sp"))
?geojson_read
gcs <- geojsonio::geojson_read(paste0(firstpart,"node['name'='Gielgen'](50.7,7.1,50.8,7.2);out;",
what="sp",method="web"))
data_path <- "D:/GESIS/data/"
library(rgdal)
setwd(data_path)
plz <- readOGR ("post_pl.shp","post_pl")
ddat <- unionSpatialPolygons(SpP = plz,
IDs = rep(1,length(plz)))
library(maptools)
ddat <- unionSpatialPolygons(SpP = plz,
IDs = rep(1,length(plz)))
set.seed(323)
n <- 1000
spatsamp <- spsample(ddat,n,type="random")
library(ggmap)
spatlist <- list()
for (i in 1:n){
spatlist[[i]] <- ggmap::revgeocode(c(spatsamp[i,]$x,
spatsamp[i,]$y))
}
spatvec <- unlist(spatlist)
spatvec
getwd()
setwd("D:/github/geocourse/slides")
plz_place <- "Deutschland"
save(spatsamp,file=paste0("../data/spatsamp_",plz_place,".RData"))
plot(ddat)
points(spatsamp)
addr_list <- spatsamp$adress
spatsamp
addr_list
spatsamp$adress <- spatvec
plz_place <- "Deutschland"
save(spatsamp,file=paste0("../data/spatsamp_",plz_place,".RData"))
points(spatsamp)
addr_list <- spatsamp$adress
indna <- which(is.na(addr_list))
addr_list <- as.character(addr_list)
addr_list2 <- strsplit(x = addr_list,split = " ")
addr_list2b <- unlist(lapply(addr_list2,length))
ind_ua <- which(addr_list2b<3)
addr_list3 <- unlist(lapply(addr_list2,function(x)x[1]))
# Adressen rauß nehmen, die Landstraßen
# oder Autobahnen sind
addr_list3 <- tolower(addr_list3)
ind_str <- grep("^[a-z][1-9]", addr_list3, value = F)
addr_list_t <- addr_list[-c(ind_str,ind_ua,indna)]
addr_list_t
ind_str2 <- grep("Unnamed Road", addr_list3, value = F)
addr_list <- spatsamp$adress
# Adressen raus nehmen, die NA sind
indna <- which(is.na(addr_list))
addr_list <- as.character(addr_list)
addr_list2 <- strsplit(x = addr_list,split = " ")
addr_list2b <- unlist(lapply(addr_list2,length))
ind_ua <- which(addr_list2b<3)
addr_list3 <- unlist(lapply(addr_list2,function(x)x[1]))
# Adressen rauß nehmen, die Landstraßen
# oder Autobahnen sind
addr_list3 <- tolower(addr_list3)
ind_str <- grep("^[a-z][1-9]", addr_list3, value = F)
ind_str2 <- grep("Unnamed Road", addr_list3, value = F)
addr_list_t <- addr_list[-c(ind_str,ind_str2,ind_ua,indna)]
addr_list_t
addr_list <- spatsamp$adress
# Adressen raus nehmen, die NA sind
indna <- which(is.na(addr_list))
addr_list <- as.character(addr_list)
addr_list2 <- strsplit(x = addr_list,split = " ")
addr_list2b <- unlist(lapply(addr_list2,length))
ind_ua <- which(addr_list2b<3)
addr_list3 <- unlist(lapply(addr_list2,function(x)x[1]))
# Adressen rauß nehmen, die Landstraßen
# oder Autobahnen sind
addr_list3 <- tolower(addr_list3)
ind_str <- grep("^[a-z][1-9]", addr_list3, value = F)
ind_str2 <- agrep("Unnamed Road", addr_list3, value = F)
addr_list_t <- addr_list[-c(ind_str,ind_str2,ind_ua,indna)]
addr_list_t
addr_list <- spatsamp$adress
# Adressen raus nehmen, die NA sind
indna <- which(is.na(addr_list))
addr_list <- as.character(addr_list)
addr_list2 <- strsplit(x = addr_list,split = " ")
addr_list2b <- unlist(lapply(addr_list2,length))
ind_ua <- which(addr_list2b<3)
addr_list3 <- unlist(lapply(addr_list2,function(x)x[1]))
# Adressen rauß nehmen, die Landstraßen
# oder Autobahnen sind
addr_list3 <- tolower(addr_list3)
ind_str <- grep("^[a-z][1-9]", addr_list3, value = F)
ind_str2 <- agrep("unnamed road", addr_list3, value = F)
addr_list_t <- addr_list[-c(ind_str,ind_str2,ind_ua,indna)]
addr_list_t
ind_str2
addr_list3
addr_list <- spatsamp$adress
# Adressen raus nehmen, die NA sind
indna <- which(is.na(addr_list))
addr_list <- as.character(addr_list)
addr_list2 <- strsplit(x = addr_list,split = " ")
addr_list2b <- unlist(lapply(addr_list2,length))
ind_ua <- which(addr_list2b<3)
addr_list3 <- unlist(lapply(addr_list2,function(x)x[1]))
# Adressen rauß nehmen, die Landstraßen
# oder Autobahnen sind
addr_list3 <- tolower(addr_list3)
ind_str <- grep("^[a-z][1-9]", addr_list3, value = F)
ind_str2 <- agrep("unnamed", addr_list3, value = F)
addr_list_t <- addr_list[-c(ind_str,ind_str2,ind_ua,indna)]
addr_list_t
save(addr_list_t,file=paste0("../data/addr_list_t_",plz_place,"_samp1",".RData"))
# set.seed(323)
set.seed(5)
n <- 1000
spatsamp <- spsample(ddat,n,type="random")
library(ggmap)
library(leaflet)
library(magrittr)
m <- leaflet() %>%
addTiles() %>%
addMarkers(lng=4.891013, lat=52.38054, popup="Amsterdam")
m
library(ggmap)
gc_ma <- geocode("GESIS Mannheim")
gc_ma
gc_tma <- geocode_OSM("Mannheim, GESIS")
library("tmaptools")
gc_tma <- geocode_OSM("Mannheim, GESIS")
gc_tma
library(leaflet)
library(magrittr)
m <- leaflet() %>%
addTiles() %>%
addMarkers(lng=8.463061 , lat=49.485736 , popup="GESIS Mannheim")
m
?gr_polygon
ab <- lawn_polygon(ddat)
geojson_write(ddat, file = "../data/ddat.geojson")
library(geojsonio)
geojson_write(ddat, file = "../data/ddat.geojson")
dland <- geojsonio::geojson_read("../data/ddat.geojson",
what = "sp")
view(dland)
sp::plot(bus_stops)
sp::plot(dland)
?geojson_read
lawn_data
view(lawn_data)
view(lawn_data$points_average)
gcs <- geojsonio::geojson_read("../data/ddat.geojson")
view(gcs)
citation("lawn")
b <- gr_polygon(n = 1)
view(b)
library(jsonlite)
con <- url("http://nominatim.openstreetmap.org/search?format=json&
addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1")
geoc <- read_json(paste(readLines(con,warn=F),
collapse = ''))
geoc <- read_json("../data/ddat.geojson")
citation("jsonlite")
devtools::install_github("ropensci/bbox") # https://github.com/ropensci/PostcodesioR/
b_box(ddat)
library(bbox)
b_box(ddat)
citation("bbox")
mutate_geocode("Mannheim")
?mutate_geocode
df <- data.frame(
address = c("1600 Pennsylvania Avenue, Washington DC", "", "houston texas"),
stringsAsFactors = FALSE
)
df
(load("../data/addr_list_t_Deutschland_samp1.RData"))
head(addr_list_t)
addr_dat <- data.frame(address = addr_list_t)
gc_addr <- mutate_geocode(df, address)
gc_addr <- mutate_geocode(addr_dat, address)
geocode("Dorsten")
geocode("Heidelberg")
library(mapview)
load("../data/spatsamp_68239.RData")
spatsamp
mapview(spatsamp)
crs(spatsamp)
library(rgdal)
crs(spatsamp)
library(raster)
crs(spatsamp)
?geocode_OSM
date()
getwd()
save(ddat,file="../data/ddat.RData")
geocode("Heidelberg")
geocode("Trier")
geocode("")
geocode_OSM(addr_list_t[1])
gc_info<-opencage_forward(placename =
"Amsterdam, Van Woustraat")
library(opencage)
gc_info<-opencage_forward(placename =
"Amsterdam, Van Woustraat")
cat("OPENCAGE_KEY=a15574982f204f19844db68a4dcaad6b\n",
file=file.path(normalizePath("~/"), ".Renviron"),
append=TRUE)
gc_info<-opencage_forward(placename =
"Amsterdam, Van Woustraat")
library(geonames)
install.packages("geonames")
library(geonames)
options(geonamesUsername="Japhilko")
GNfindNearbyWikipedia(postalcode=8775,country="CH",radius=10)
GNfindNearbyWikipedia(postalcode=8775,country="CH",radius=10)
MAwiki <- GNfindNearbyWikipedia(postalcode=68239,country="DE",radius=10)
MAwiki
save(MAwiki,file="../data/MAwiki.RData")
load("../data/MAwiki.RData")
library(knitr)
BBT <- qmap("Berlin Brandenburger Tor")
BBT
dev.off()
BBT
getwd()
pdf("figure/BBT_ggmap.pdf")
BBT
dev.off()
ham_map <- qmap('Hamburg', zoom = 20, maptype="hybrid")
save(ham_map,file="../data/ham_map.RData")
pdf("figure/ham_map.pdf")
ham_map
dev.off()
png("figure/ham_map.png")
ham_map
dev.off()
ham_map_sat <- qmap('Hamburg', zoom = 14, maptype="satellite")
save(ham_map_sat,file="../data/ham_map_sat.RData")
pdf("figure/ham_map_sat.pdf")
ham_map_sat
dev.off()
png("figure/ham_map_sat.png")
ham_map_sat
dev.off()
ham_map_sat <- qmap('Hamburg', zoom = 14, maptype="satellite")
save(ham_map_sat,file="../data/ham_map_sat.RData")
ham_map_sat
getwd()
pdf("figure/ham_map_sat.pdf")
ham_map_sat
dev.off()
png("figure/ham_map_sat.png")
ham_map_sat
dev.off()
ham_map_z20 <- qmap('Mannheim', zoom = 13)
save(ham_map_sat,file="../data/ham_map_sat.RData")
pdf("figure/ham_map_z20.pdf")
ham_map_z20
dev.off()
png("figure/ham_map_z20.png")
ham_map_z20
dev.off()
ham_map_z20 <- qmap('Mannheim', zoom = 13)
save(ham_map_sat,file="../data/ham_map_sat.RData")
pdf("figure/ham_map_z20.pdf")
ham_map_z20
dev.off()
png("figure/ham_map_z20.png")
ham_map_z20
dev.off()
germany <- qmap("Germany")
save(germany,file="../data/germany.RData")
pdf("figure/germany.pdf")
germany
dev.off()
png("figure/germany.png")
germany
dev.off()
germany <- qmap("Germany")
save(germany,file="../data/germany.RData")
pdf("figure/germany.pdf")
germany
dev.off()
png("figure/germany.png")
germany
dev.off()
Berchtesgarden <- qmap('Berchtesgarden', zoom = 14,
maptype="terrain")
Schriesheim <- qmap('Schriesheim', zoom = 14,
maptype="terrain")
vg250path <- "D:/GESIS/data/vg250_3112.utm32s.shape.ebenen/vg250_ebenen"
library(rgdal)
setwd(vg250path)
VG250 <- readOGR ("VG250_GEM.shp","VG250_GEM")
bla <- substr(VG250@data$AGS_0,1,2)
plot(VG250[bla=="11",])
ham_map_z12 <- qmap("Hamburg", zoom = 12)
date()
getwd()
setwd("D:/github/geocourse")
main_path <- "D:/github/geocourse"
slide_path <- paste0(main_path,"slides/")
rcode_path <- paste0(main_path,"rcode/")
dirnamen <- dir()
dirnamen
#-------------------------------------------------#
# Parts of the presentation
#-------------------------------------------------#
setwd(slide_path)
dirnamen <- dir()
main_path <- "D:/github/geocourse"
main_path <- "D:/github/geocourse/"
slide_path <- paste0(main_path,"slides/")
rcode_path <- paste0(main_path,"rcode/")
#-------------------------------------------------#
# Parts of the presentation
#-------------------------------------------------#
setwd(slide_path)
dirnamen <- dir()
dirnamen
presparts <- dirnamen[grep(".Rmd",dirnamen)]
presparts
# setwd("D:/gitlab/IntroDataAnalysis/rcode/")
setwd(rcode_path)
for (i in 1:length(presparts)){
purl(paste0("../slides/",presparts[i]),documentation = 2)
}
presparts
i
length(presparts)
install.packages("choroplethr")
install.packages("choroplethrMaps")
vec_a <- c("A",2,6,1,"C")
vec_b <- c(1,"C",2)
match(vec_a,vec_b)
