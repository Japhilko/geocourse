# Chunk 5
setwd(vg250path)
VG250 <- readOGR ("VG250_GEM.shp","VG250_GEM")
# Chunk 6
spatsamp <- spsample(VG250, 100,type="random")
# Chunk 7
tmp <- sp::over(spatsamp, VG250)
# Chunk 8
head(tmp[,1:6])
# Chunk 10
newData<-sp::spTransform(spatsamp, CRS("+init=epsg:3857"))
# Chunk 11
head(spatsamp)
head(newData)
# Chunk 12
library(maptools)
data(wrld_simpl)
Africa <- wrld_simpl[wrld_simpl@data$REGION==2,]
plot(Africa)
# Chunk 13
Af <- coordinates(Africa)
head(Af)
# Chunk 14
plot(Africa)
points(x=Af[1,1],y=Af[1,2],col="red",pch=20)
# Chunk 15
library(spdep)
Af_nb <- tri2nb(Af)
Af@data
Af
head(Af)
Africa@data
head(Africa@data)
Africa@data[Af_nb[1],]
Africa@data
Af_nb[1]
Africa@data[Af_nb[[1]][1],]
Africa@data[Af_nb[[1]],]
# Chunk 1: setup_shapefiles
knitr::opts_chunk$set(echo = T,cache=T,fig.height=4,message=F,warning=F)
library(knitr)
GESIS <- F
athome <- !GESIS
ONB_ex <- T
spatsampI <-F
show_solution <- F
# Chunk 2
geodata_path <- "D:/Daten/Daten/GeoDaten/"
# Chunk 3
geodata_path <- "D:/GESIS/owncloud/presentations/20151003_Georef_SurveyT/data/"
# Chunk 4
setwd(geodata_path)
library(maptools)
onb <- readShapePoly("onb_grenzen.shp")
# Chunk 7
kable(head(onb@data))
# Chunk 8
vwb <- onb@data$VORWAHL
vwb2 <- substr(vwb, 1,2)
# Chunk 9
library(lattice)
barchart(table(vwb2),col="royalblue",
xlab="Häufigkeit")
# Chunk 10
vwb6 <- onb[vwb2=="06",]
plot(vwb6)
# Chunk 11
vwb6c <- unionSpatialPolygons(vwb6,
rep(1,length(vwb6)))
plot(vwb6c,col="royalblue")
# Chunk 12
Com <- vwb6@data$NAME
plot(vwb6)
plot(vwb6[Com=="Mannheim",],col="red",add=T)
plot(vwb6[Com=="Heidelberg",],col="green",add=T)
plot(vwb6[Com=="Kaiserslautern",],col="blue",add=T)
# Chunk 13
data_path <- "D:/GESIS/data/"
# Chunk 14
data_path <- "D:/Daten/Daten/GeoDaten/"
# Chunk 15
library(rgdal)
# Chunk 16
setwd(data_path)
plz <- readOGR ("post_pl.shp","post_pl")
# Chunk 17
plzbereich <- substr(plz@data$PLZ99,1,2)
plot(plz[plzbereich=="68",])
eurostatpath <- "D:/Eigene Dateien/Dokumente/GitHub/ps_2017_11_user_stuttgart/data/"
HHsr <- read.xlsx2(paste0(eurostatpath,"HHsavingRate.xls",1))
library(xlsx)
HHsr <- read.xlsx2(paste0(eurostatpath,"HHsavingRate.xls",1))
HHsr <- read.xlsx2(paste0(eurostatpath,"HHsavingRate.xls"),1)
kable(HHsr[1:4,1:5])
install.packages("colourpicker")
library(ggplot2);library(choroplethrMaps)
library(WDI)
load("../data/info_bar_Berlin.RData")
getwd()
setwd("D:/github/geocourse/slides")
load("../data/info_bar_Berlin.RData")
info_be <- info[,c("addr.postcode","addr.street","name","lat","lon")]
tab_plz <- table(info_be$addr.postcode)
ind <- match(BE@data$PLZ99_N,names(tab_plz))
PLZ@data
setwd(data_path)
data_path <- "D:/GESIS/data/"
plz <- readOGR ("post_pl.shp","post_pl")
setwd(data_path)
plz <- readOGR ("post_pl.shp","post_pl")
BE <- plz[plz@data$PLZORT99%in%c("Berlin-West",
"Berlin (östl. Stadtbezirke)"),]
getwd()
setwd("D:/github/geocourse/slides")
save(BE,file="../data/BE.RData")
ind <- match(BE@data$PLZ99_N,names(tab_plz))
ind
BE@data$num_plz <- tab_plz[ind]
BE@data$num_plz[is.na(BE@data$num_plz)] <- 0
tmap::qtm(BE,fill = "num_plz")
load("../data/osmsa_PLZ_14.RData")
dat_plz <- PLZ@data
kable(head(dat_plz))
dat_plz <- PLZ@data
DT::datatable(dat_plz)
data_path <- "D:/Daten/Daten/GeoDaten/"
setwd(data_path)
data_path <- "D:/GESIS/data/"
setwd(data_path)
PLZ_SG <- plz[plz@data$PLZORT99=="Stuttgart",]
qtm(PLZ_SG,fill="bakery")
tmap::qtm(PLZ_SG,fill="bakery")
PLZ_SG <- PLZ[PLZ@data$PLZORT99=="Stuttgart",]
ls()
load("../data/osmsa_PLZ_14.RData")
setwd("D:/github/geocourse/slides")
load("../data/osmsa_PLZ_14.RData")
(load("../data/osmsa_PLZ_14.RData"))
PLZ@data
tmap::qtm(PLZ_SG,fill="bakery")
tab_landcover <- table(PLZ_SG$land_cover.value)
df_landcover <- data.frame(tab_landcover)
colnames(df_landcover)[1] <- c("Type_landcover")
kable(df_landcover)
qtm(PLZ_SG,fill="land_cover.value")
library("RJSONIO")
con <- url("http://nominatim.openstreetmap.org/search?format=json&
addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1")
geoc <- fromJSON(paste(readLines(con,warn=F),
collapse = ''))
close(con)
names(geoc[[1]])
getwd()
setwd("slides")
save(geoc,file="../data/Amsterdam_Rozengracht.RData")
load("../data/Amsterdam_Rozengracht.RData")
geoc[[1]]
geoc[[1]]$address
geoc2 <- jsonlite::fromJSON(paste(readLines(con,warn=F),
collapse = ''))
geoc2 <- jsonlite::fromJSON(paste(readLines(con,warn=F),
collapse = ''))
?jsonlite::fromJSON
geoc2 <- jsonlite::fromJSON("http://nominatim.openstreetmap.org/search?format=json&
addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1")
geoc2 <- jsonlite::fromJSON(con)
con <- url("http://nominatim.openstreetmap.org/search?format=json&
addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1")
geoc2 <- jsonlite::fromJSON(con)
close(con)
geoc2
with(geoc2,data.frame(osm_id,lat))
geoc2df <- with(geoc2,data.frame(osm_id,lat))
geoc2df
geoc2df <- with(geoc2,data.frame(osm_id,lat,lon))
geoc2df
geoc2
DT::datatable(geoc2df)
?DT::datatable
DT::datatable(geoc2)
geoc2
geoc3 <- data.frame(geoc2)
DT::datatable(geoc2)
geoc3
DT::datatable(geoc3)
geoc2df <- with(geoc2,data.frame(osm_id,lat,lon,address.house_number))
DT::datatable(geoc2df)
kable(geoc2df)
library(knitr)
kable(geoc2df)
geoc2df <- with(geoc2,data.frame(osm_id,lat,lon,address.house_number))
geoc2 <- jsonlite::fromJSON(con)
geoc2df <- with(geoc2,data.frame(osm_id,lat,lon,address.house_number))
geoc2
con <- url("http://nominatim.openstreetmap.org/search?format=json&
addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1")
geoc2 <- jsonlite::fromJSON(con)
geoc2
geoc2$address
geoc2$address$house_number
geoc2df$house_number <-  geoc2$address$house_number
kable(geoc2df)
save(geoc2df,file="Amsterdam_Rozengracht_geoc2df.RData")
save(geoc2df,file="../data/Amsterdam_Rozengracht_geoc2df.RData")
load("../data/Amsterdam_Rozengracht_geoc2df.RData")
load("../data/MAwiki.RData")
library(knitr)
kable(MAwiki)
DT::datatable(MAwiki)
DT::datatable(MAwiki[-which(colnames(MAwiki)%in%c("Summary"))])
DT::datatable(MAwiki[-which(colnames(MAwiki)%in%c("Summary")),])
which(colnames(MAwiki)%in%c("Summary"))
colnames(MAwiki)
DT::datatable(MAwiki[-which(colnames(MAwiki)%in%c("summary")),])
DT::datatable(MAwiki[,-which(colnames(MAwiki)%in%c("summary"))])
install.packages("ggmap")
library(ggmap)
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim")
library(ggmap)
MA_map <- qmap("Mannheim")
geocode("Mannheim")
geocode("Mannheim, B2,1")
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim")
?geocode
devtools::install_github("dkahle/ggmap", ref = "tidyup")
install.packages("digest")
install.packages("digest")
ininstall.packages("scales")
install.packages("scales")
install.packages("dplyr")
devtools::install_github("dkahle/ggmap", ref = "tidyup")
MA_map <- qmap("Mannheim")
library(ggmap)
MA_map <- qmap("Mannheim")
geocode("Mannheim, B2,1")
?register_google
register_google(key = "Jxr-29R4kdAeZ_yAzLFaAd6kuJQ=")
geocode("Mannheim, B2,1")
geocode("Mannheim, B2,1")
register_google(key = "our-rampart-219920 ")
geocode("Mannheim, B2,1")
register_google(key = "
AIzaSyCZ1W32SKVnjBjTy3ayS9Oxtzgpll-6E08")
geocode("Mannheim, B2,1")
register_google(key = "AIzaSyCZ1W32SKVnjBjTy3ayS9Oxtzgpll-6E08")
geocode("Mannheim, B2,1")
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim, B2,1")
geocode("Mannheim, B2,1")
geocode("Mannheim, B2,5")
geocode("Heidelberg")
register_google(key = "AIzaSyCZ1W32SKVnjBjTy3ayS9Oxtzgpll-6E08")
geocode("Heidelberg")
register_google(key = "AIzaSyBCk4y1fkqoAOb_VNhom9WO4-IWgLTzyds")
geocode("Heidelberg")
geocode("Mannheim")
register_google(key = "AIzaSyAfzshcMRteMzdUFdpby8_lcCe6NAaglmg")
MA_map <- qmap("Mannheim, B2,1")
geocode("Mannheim")
geocode("Heidelberg")
MA_map <- qmap("Mannheim")
MA_map <- qmap("Mannheim")
register_google(key = "AIzaSyAfzshcMRteMzdUFdpby8_lcCe6NAaglmg")
MA_map <- qmap("Mannheim")
xtable(geoc2df)
library(xtable)
xtable(geoc2df,row.names=F)
paste0(coursepath,"slides/A2_ggmap.R")
coursepath <-"https://github.com/Japhilko/geocourse/blob/master/"
paste0(coursepath,"slides/A2_ggmap.R")
library(rnaturalearth)
usa = ne_countries(country = "United States of America") # United States borders
usa
plot(usa)
library(raster)
x <- raster()
x
plot(r, main='Raster with 100 cells')
library(sf)
usa_sf <- st_as_sf(usa)
plot(usa_sf)
library("RJSONIO")
api_adress <- "http://nominatim.openstreetmap.org/search?format="
file_format <- "json"
search_query <- "addressdetails=1&extratags=1&q="
adress <- "Amsterdam+Niederlande+Rozengracht+1"
link <- paste0(api_adress,file_format,search_query,adress)
con <- url(link)
geoc <- fromJSON(paste(readLines(con,warn=F),
collapse = ''))
close(con)
link <- "http://nominatim.openstreetmap.org/search?format=json&
link <- "http://nominatim.openstreetmap.org/search?format=json&addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1"
link <- "http://nominatim.openstreetmap.org/search?format=json&addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1"
con <- url(link)
geoc <- fromJSON(paste(readLines(con,warn=F),
collapse = ''))
close(con)
link <- paste0(api_adress,file_format,search_query,adress)
link
"http://nominatim.openstreetmap.org/search?format=json&addressdetails=1&extratags=1&q=Amsterdam+Niederlande+Rozengracht+1"
search_query <- "&addressdetails=1&extratags=1&q="
adress <- "Amsterdam+Niederlande+Rozengracht+1"
link <- paste0(api_adress,file_format,search_query,adress)
con <- url(link)
geoc <- fromJSON(paste(readLines(con,warn=F),
collapse = ''))
close(con)
DT::datatable(bev_dat[1:1000,1:20])
setwd(zen_path)
zen_path <- "D:/GESIS/Vorträge/20171122_userStuttgart/data/"
setwd(zen_path)
bev_dat <- readxl::read_excel("xlsx_Bevoelkerung.xlsx",3)
DT::datatable(bev_dat[1:1000,1:20])
library(knitr)
library(rmarkdown)
library(lme4)
#------------------------------------------------
main_path <- "D:/github/geocourse/" # zu Hause
main_path <- "D:/Daten/GitHub/geocourse/"
slide_path <- paste0(main_path,"slides/")
rcode_path <- paste0(main_path,"rcode/")
setwd(rcode_path)
main_path <- "D:/github/geocourse/" # zu Hause
slide_path <- paste0(main_path,"slides/")
rcode_path <- paste0(main_path,"rcode/")
setwd(rcode_path)
purl("../slides/A3_DataPUF.Rmd",documentation = 2)
purl("../slides/A4_tmap.Rmd",documentation = 2)
purl("../slides/A5_Choroplethen.Rmd",documentation = 2)
library(rgdal)
data_path <- "D:/GESIS/data/"
plz <- readOGR ("post_pl.shp","post_pl")
setwd(data_path)
plz <- readOGR ("post_pl.shp","post_pl")
plz@data$PLZORT99
agrep("Freiburg",plz@data$PLZORT99)
agrep("Freiburg",plz@data$PLZORT99,value=T)
grep("Freiburg",plz@data$PLZORT99,value=T)
?agrep
agrep("Freiburg",plz@data$PLZORT99,value=T,
max.distance = 0.5)
agrep("Freiburg",plz@data$PLZORT99,value=T,
max.distance = 0.2)
map.cities(world.cities,col=rgb(0,0,1,.3),pch=20)
library(maps)
data(world.cities)
map("france")
map.cities(world.cities,col="blue")
map.cities(world.cities,col=rgb(0,0,1,.3),pch=20)
map("france")
map.cities(world.cities,col=rgb(0,0,1,.3),pch=20)
map.cities(world.cities,col=rgb(0,0,1,.6),pch=20)
map("france")
map.cities(world.cities,col=rgb(0,0,1,.6),pch=20)
map.cities(world.cities,col=rgb(0,0,1,.4),pch=20,cex=4)
purl("../slides/A6_Shapefiles.Rmd",documentation = 2)
setwd(rcode_path)
purl("../slides/A6_Shapefiles.Rmd",documentation = 2)
purl("../slides/A7_spdep.Rmd",documentation = 2)
download.file(url = 'https://raw.githubusercontent.com/GeoScripting-WUR/IntroToRaster/gh-pages/data/gewata.zip', destfile = 'gewata.zip', method = 'auto')
getwd()
setwd("../data")
unzip('gewata.zip')
list.files(pattern = glob2rx('*.tif'))
# Or if you are familiar with regular expressions
list.files(pattern = '^.*\\.tif$')
gewata <- brick('LE71700552001036SGS00_SR_Gewata_INT1U.tif')
gewata <- raster::brick('LE71700552001036SGS00_SR_Gewata_INT1U.tif')
plot(gewata)
gewata@data
gewata <- raster::brick('../data/
LE71700552001036SGS00_SR_Gewata_INT1U.tif')
getwd()
setwd("..")
setwd("slides/")
gewata <- raster::brick('../data/
LE71700552001036SGS00_SR_Gewata_INT1U.tif')
getwd()
setwd("../data/")
tmin <- getData("worldclim", var = "tmin", res = 10)
tmin <- raster::getData("worldclim", var = "tmin", res = 10)
tmin1 <- raster( "../data/wc10/tmin1.bil")
tmin1 <- raster::raster( "../data/wc10/tmin1.bil")
tmin1
tmin1
tmin1@data
plot(tmin1)
tmin1 <- tmin1/10
plot(tmin1)
getwd()
setwd("../rcode")
purl("../slides/B1_OpenStreetMap.Rmd",documentation = 2)
library(ggmap)
mapdist("Q1, 4 Mannheim","B2, 1 Mannheim")
?register_google
register_google("AIzaSyAfzshcMRteMzdUFdpby8_lcCe6NAaglmg")
mapdist("Q1, 4 Mannheim","B2, 1 Mannheim")
library(googleway)
map_key <- "AIzaSyAfzshcMRteMzdUFdpby8_lcCe6NAaglmg"
google_map(key = map_key, data = tram_stops) %>%
add_markers() %>%
add_traffic()
google_map(key = map_key, "London")
purl("../slides/B2_Geokodierung.Rmd",documentation = 2)
purl("../slides/B3_osm_mainapi.Rmd",documentation = 2)
purl("../slides/B4_Overpass.Rmd",documentation = 2)
setwd(rcode_path)
purl(".../slides/B5_osmdata.Rmd",documentation = 2)
setwd(rcode_path)
purl(".../slides/B5_osmdata.Rmd",documentation = 2)
getwd()
purl(".../slides/B5_osmdata.Rmd",documentation = 2)
purl(".../slides/B5_osmdata.Rmd",documentation = 2)
purl(".../slides/B",documentation = 2)
purl("../slides/B5_osmdata.Rmd",documentation = 2)
date()
3+3
4+
4
install.packages("readstata13")
library(readstata13)
?read.dta13
?mean
x <- c(0:10, 50)
xm <- mean(x)
c(xm, mean(x, trim = 0.10))
library(osmdata)
getwd()
setwd("D:/github/geocourse/data")
getwd()
dir()
data_path <- "D:/github/geocourse/data"
setwd(data_path)
zen_path <- "D:/GESIS/Vorträge/20171122_userStuttgart/data/"
zen_path
setwd(zen_path)
bev_dat <- readxl::read_excel("xlsx_Bevoelkerung.xlsx",3)
dim(bev_dat)
bev_dat2 <- bev_dat[1:1000,1:20]
dim(bev_dat2)
DT::datatable(bev_dat[1:1000,1:20])
setwd("D:/github/geocourse/data")
setwd("D:/github/geocourse/data")
library(xlsx)
install.packages("xlsx")
data_path <- "D:/GESIS/data"
setwd(data_path)
getw()
getwd()
dir()
dat <- xlsx::read.xlsx2("Datzen.xlsx")
dat <- xlsx::read.xlsx2("Datzen.xlsx",1)
library(readxl)
dat <- read_excel("Datzen.xlsx")
View(dat)
dat <- read.csv2("Datzen.csv")
dat
head(dat)
colnames(dat)
View(dat)
zen_path <- "D:/GESIS/Vorträge/20171122_userStuttgart/data/"
setwd(zen_path)
bev_dat <- readxl::read_excel("xlsx_Bevoelkerung.xlsx",3)
colnames(bev_dat)
colnames(bev_dat)[1]
head(bev_dat$`12-stelliger Amtlicher
Gemeindeschlüssel (AGS)`)
head(bev_dat[,1])
table(bev_dat[,1])
bla <- substr(bev_dat[,1],1,2)
table(bla)
bev_dat[,1]
as.character(bev_dat[,1])
bev_dat[,1]
bev_dat <- data.frame(bev_dat[,1])
bev_dat[,1]
bev_dat <- data.frame(bev_dat)
bev_dat[,1]
bla <- substr(bev_dat[,1],1,2)
table(bla)
bev_dat[1,1]
bev_dat[,1]
dim(bev_dat[,1])
length(bev_dat[,1])
dim(bev_dat)
SAL <- bev_dat[bla=="10",]
bev_dat$bla <- substr(bev_dat[,1],1,2)
SAL <- bev_dat[bla=="10",]
SAL <- bev_dat[bla=="10",]
dim(SAL)
head(bev_dat)
nchar(bla)
table(nchar(bla))
table(nchar(bev_dat[,1])
)
ab <- c("1234567","12345678","12345678")
nchar(ab)
ab[nchar(ab)==7] <- paste0("0",ab[nchar(ab)==7])
colnames(dat)[1:4]
?read.csv
colnames(dat)[1] <- "ags"
colnames(dat)[1]
paste("A","BA")
paste("A","BA")
paste0("A","BA")
